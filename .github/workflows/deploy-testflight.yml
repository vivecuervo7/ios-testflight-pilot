name: Deploy to TestFlight

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  XCODE_VERSION: "16.1"
  API_PRIVATE_KEYS_DIR: /tmp/private_keys # Recognized by the `xcrun altool` command for uploading the IPA

jobs:
  test:
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup iOS build environment
        id: setup
        uses: ./.github/actions/setup-ios-build-environment
        with:
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
          certificate-base64: ${{ secrets.DISTRIBUTION_CERTIFICATE_BASE64 }}
          certificate-password: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSWORD }}
          app-store-connect-api-key: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          app-store-connect-api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          xcode-version: ${{ env.XCODE_VERSION }}
          environment-name: test

      - name: Run tests
        run: |
          cd Pilot
          echo "Running tests..."
          xcodebuild test \
            -project Pilot.xcodeproj \
            -scheme "Pilot Dev" \
            -configuration "Debug Dev" \
            -destination "platform=iOS Simulator,name=iPhone 16" \

      - name: Cleanup
        uses: ./.github/actions/cleanup-ios-build-environment
        with:
          keychain-name: ${{ steps.setup.outputs.keychain-name }}

  deploy-dev:
    runs-on: macos-latest
    timeout-minutes: 30
    needs: test
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup iOS build environment
        id: setup
        uses: ./.github/actions/setup-ios-build-environment
        with:
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
          certificate-base64: ${{ secrets.DISTRIBUTION_CERTIFICATE_BASE64 }}
          certificate-password: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSWORD }}
          app-store-connect-api-key: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          app-store-connect-api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          xcode-version: ${{ env.XCODE_VERSION }}
          environment-name: dev

      - name: Build and upload Dev
        uses: ./.github/actions/build-and-upload-ios-app
        with:
          environment: Dev
          scheme-name: "Pilot Dev"
          configuration: Release
          app-store-connect-api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          app-store-connect-issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          keychain-name: ${{ steps.setup.outputs.keychain-name }}
          provisioning-profile-base64: ${{ secrets.PROVISIONING_PROFILE_DEV_BASE64 }}
          provisioning-profile-name: "Dev provisioning profile"

      - name: Cleanup
        uses: ./.github/actions/cleanup-ios-build-environment
        with:
          keychain-name: ${{ steps.setup.outputs.keychain-name }}

  deploy-staging:
    runs-on: macos-latest
    timeout-minutes: 30
    needs: deploy-dev
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup iOS build environment
        id: setup
        uses: ./.github/actions/setup-ios-build-environment
        with:
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
          certificate-base64: ${{ secrets.DISTRIBUTION_CERTIFICATE_BASE64 }}
          certificate-password: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSWORD }}
          app-store-connect-api-key: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          app-store-connect-api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          xcode-version: ${{ env.XCODE_VERSION }}
          environment-name: staging

      - name: Build and upload Staging
        uses: ./.github/actions/build-and-upload-ios-app
        with:
          environment: Staging
          scheme-name: "Pilot Staging"
          configuration: Release
          app-store-connect-api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          app-store-connect-issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          keychain-name: ${{ steps.setup.outputs.keychain-name }}
          provisioning-profile-base64: ${{ secrets.PROVISIONING_PROFILE_STAGING_BASE64 }}
          provisioning-profile-name: "Staging provisioning profile"

      - name: Cleanup
        uses: ./.github/actions/cleanup-ios-build-environment
        with:
          keychain-name: ${{ steps.setup.outputs.keychain-name }}

  deploy-prod:
    runs-on: macos-latest
    timeout-minutes: 30
    needs: deploy-staging
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup iOS build environment
        id: setup
        uses: ./.github/actions/setup-ios-build-environment
        with:
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
          certificate-base64: ${{ secrets.DISTRIBUTION_CERTIFICATE_BASE64 }}
          certificate-password: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSWORD }}
          app-store-connect-api-key: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          app-store-connect-api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          xcode-version: ${{ env.XCODE_VERSION }}
          environment-name: prod

      - name: Build and upload Prod
        uses: ./.github/actions/build-and-upload-ios-app
        with:
          environment: Prod
          scheme-name: "Pilot Prod"
          configuration: Release
          app-store-connect-api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          app-store-connect-issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          keychain-name: ${{ steps.setup.outputs.keychain-name }}
          provisioning-profile-base64: ${{ secrets.PROVISIONING_PROFILE_PROD_BASE64 }}
          provisioning-profile-name: "Prod provisioning profile"

      - name: Cleanup
        uses: ./.github/actions/cleanup-ios-build-environment
        with:
          keychain-name: ${{ steps.setup.outputs.keychain-name }}
