name: Deploy to TestFlight

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  XCODE_VERSION: "16.1"
  IOS_VERSION: "18.0"

jobs:
  build-and-test:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate App Store Connect JWT Token
        id: jwt
        uses: ./.github/actions/generate-appstore-jwt
        with:
          api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

      - name: Test App Store Connect API
        if: success()
        run: |
          echo "Testing App Store Connect API with generated JWT token..."

          # Test the API by listing certificates (Developer role has access)
          HTTP_STATUS=$(curl -s -o /tmp/api_response.json -w "%{http_code}" \
            -H "Authorization: Bearer ${{ steps.jwt.outputs.jwt-token }}" \
            -H "Content-Type: application/json" \
            "https://api.appstoreconnect.apple.com/v1/certificates?limit=10")

          echo "API Response Status: $HTTP_STATUS"

          if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "‚úÖ App Store Connect API test successful!"
            echo "üì± Found certificates:"
            
            # Parse and display certificates
            cat /tmp/api_response.json | grep -A 3 '"certificateType"' | while read -r line; do
              if [[ $line == *'"certificateType"'* ]]; then
                TYPE=$(echo $line | sed 's/.*"certificateType" : "\([^"]*\)".*/\1/')
                echo "  ‚Ä¢ $TYPE Certificate"
              elif [[ $line == *'"expirationDate"'* ]]; then
                DATE=$(echo $line | sed 's/.*"expirationDate" : "\([^"]*\)".*/\1/')
                echo "    Expires: $DATE"
              fi
            done
            
            echo ""
            echo "üîë JWT Authentication: ‚úÖ Working"
            echo "üè¢ API Access: ‚úÖ Verified"
          elif [ "$HTTP_STATUS" -eq 401 ]; then
            echo "‚ùå Authentication failed (HTTP 401)"
            echo "Check your API credentials"
            cat /tmp/api_response.json
            exit 1
          elif [ "$HTTP_STATUS" -eq 403 ]; then
            echo "‚ùå Forbidden (HTTP 403)"
            echo "Your API key may lack required permissions"
            cat /tmp/api_response.json
            exit 1
          else
            echo "‚ö†Ô∏è Unexpected response (HTTP $HTTP_STATUS)"
            cat /tmp/api_response.json
            exit 1
          fi

          # Clean up
          rm -f /tmp/api_response.json

      - name: Setup certificates and provisioning
        # TODO: Import certificates and provisioning profiles
        run: echo "TODO - Setup Apple certificates and provisioning profiles"

      - name: Build app for testing
        # TODO: Build the app for running tests
        run: echo "TODO - Build app for testing using xcodebuild"

      - name: Run tests
        # TODO: Execute Xcode unit tests
        run: echo "TODO - Run Xcode tests"

      - name: Build and Archive for TestFlight
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        # TODO: Create archive for App Store distribution
        run: echo "TODO - Archive app for TestFlight distribution"

      - name: Export IPA
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        # TODO: Export signed IPA from archive
        run: echo "TODO - Export IPA file from archive"

      - name: Upload to TestFlight
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Uploading to TestFlight using App Store Connect API..."
          echo "Using JWT token (5 minute expiry)"

          # TODO: Use the JWT token for TestFlight upload
          # Example using App Store Connect API directly:
          # curl -H "Authorization: Bearer ${{ steps.jwt.outputs.jwt-token }}" \
          #      -H "Content-Type: application/json" \
          #      https://api.appstoreconnect.apple.com/v1/...

          echo "TODO - Upload IPA to TestFlight using JWT token"

      - name: Cleanup
        if: always()
        # TODO: Clean up temporary files, keychains, etc.
        run: echo "TODO - Clean up temporary files and keychains"
